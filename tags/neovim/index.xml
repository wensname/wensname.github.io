<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Neovim on sufan 的 blog</title>
        <link>https://wensname.github.io/tags/neovim/</link>
        <description>Recent content in Neovim on sufan 的 blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Sat, 26 Oct 2024 01:53:07 +0800</lastBuildDate><atom:link href="https://wensname.github.io/tags/neovim/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Neovim折腾</title>
        <link>https://wensname.github.io/post/neovim%E6%8A%98%E8%85%BE/</link>
        <pubDate>Sat, 26 Oct 2024 01:53:07 +0800</pubDate>
        
        <guid>https://wensname.github.io/post/neovim%E6%8A%98%E8%85%BE/</guid>
        <description>&lt;h3 id=&#34;背景介绍&#34;&gt;背景介绍
&lt;/h3&gt;&lt;p&gt;最近一周一直在折腾neovim，参考的教程是这一篇：
&lt;a class=&#34;link&#34; href=&#34;https://juejin.cn/book/7051157342770954277&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;掘金小册&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;遇到了很多小问题，单独拿出来写一篇博客两三
行就结束了，集中在一篇里面算了，后续如果继续折腾也会不断补充。&lt;/p&gt;
&lt;h3 id=&#34;问题汇总&#34;&gt;问题汇总
&lt;/h3&gt;&lt;h4 id=&#34;nvim-cmp-某些命令卡顿&#34;&gt;nvim-cmp 某些命令卡顿
&lt;/h4&gt;&lt;p&gt;在使用nvim-cmp插件时，我也遇到了像如下issue的错误：
&lt;a class=&#34;link&#34; href=&#34;https://github.com/hrsh7th/cmp-cmdline/issues/112&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;issue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;具体来说，就是用到cmdline中的自动补全时，运行&lt;code&gt;:r !ls&lt;/code&gt;会极端卡顿，原因未知。上面的issue说的也是这个问题。
我的解决方案简单粗暴，直接禁用&lt;code&gt;:r&lt;/code&gt;命令下的命令行自动补全，修改&lt;code&gt;~/.config/nvim/lua/lsp/cmp.lua&lt;/code&gt;文件
中的部分代码如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;-- : 命令行模式中使用 path 和 cmdline 源.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;cmp.setup&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmdline&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sources&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp.config&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sources&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;path&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;cmdline&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;option&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ignore_cmds&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Man&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;!&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;read&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;值得一提的是，禁用命令必须禁用全名，只写&lt;code&gt;r&lt;/code&gt;没有用，必须写&lt;code&gt;read&lt;/code&gt;。这种解决方法其实并没有找到根本原因
，牺牲了&lt;code&gt;r&lt;/code&gt;命令下的自动补全。&lt;/p&gt;
&lt;h4 id=&#34;markdown-preview插件&#34;&gt;markdown-preview插件
&lt;/h4&gt;&lt;p&gt;插件的作者只提供了vim版本的设置，需要手动将其改为lua文件，将部分命令替换即可。&lt;/p&gt;
&lt;h4 id=&#34;输入法自动切换&#34;&gt;输入法自动切换
&lt;/h4&gt;&lt;p&gt;在输入的时候经常用中文输入，如果这时候回到normal模式就必须按shift切回英文，比较麻烦
因此可以用autocmd来自动切换，需要下载im-select，这个不是插件，只是一个exe可执行文件
，将其放在nvim目录下，在此之前在windows设置里下载好英文输入法语言包。
就可以用&lt;code&gt;:silent :!~/.config/nvim/im-select.exe 1033&amp;quot;&lt;/code&gt;命令来换输入法，后面的1033代表
换为英文，2052代表中文，还遇到一个小问题是我发现我习惯用的&lt;code&gt;&amp;lt;C-c&amp;gt;&lt;/code&gt;命令并不会调用
InsertLeave Event，因此我做了一个键位映射，将其映射到了&lt;code&gt;&amp;lt;Esc&amp;gt;&lt;/code&gt;键，至此就可以比较
舒服的编辑和输入法自动切换了。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
